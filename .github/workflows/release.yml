name: Release

on:
  push:
    branches:
      - main

jobs:
  en-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - run: |
          curl https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH
      - run: |
          pnpm i
          pnpm build -l en
      - name: upload
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
        run: |
          aws s3 sync ./build s3://www.moonbitlang.com --exclude llms.txt --delete
          aws cloudfront create-invalidation --distribution-id ${{secrets.AWS_CLOUDFRONT_HOMEPAGE_DISTRIBUTION_ID}} --paths "/*"

  zh-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - run: |
          curl https://cli.moonbitlang.com/install/unix.sh | bash
          echo "$HOME/.moon/bin" >> $GITHUB_PATH
      - run: |
          pnpm i
          pnpm build -l zh
      - uses: aliyun/setup-aliyun-cli-action@v1
      - name: upload
        run: |
          aliyun configure set --profile default --mode AK --access-key-id ${{secrets.ALIBABA_CLOUD_ACCESS_KEY_ID}} --access-key-secret ${{secrets.ALIBABA_CLOUD_ACCESS_KEY_SECRET}} --region ${{secrets.ALIBABA_REGION}}
          aliyun oss sync ./build ${{secrets.ALIYUN_OSS_BUCKET}} --exclude llms.txt --delete --force
          aliyun cdn RefreshObjectCaches --ObjectPath https://www.moonbitlang.cn/ --ObjectType Directory
