"use strict";var g={kind:"start",message:""},l={kind:"over",message:""},f=s=>({kind:"warn",message:s}),b=s=>({kind:"error",message:s}),p=s=>({kind:"internal",message:s}),u=[["spectest","print_char"],["js_string","new"],["js_string","log"]];self.onmessage=async s=>{try{self.postMessage(g);let r=s.data.wasm,n=(await import(s.data.runtimeURL)).default;for(let[e,t]of u)e in n&&t in n[e]&&self.postMessage(f(`${e}.${t} is a reserved runtime, override it may break moonbit`));let a,m={spectest:{print_char:e=>{self.postMessage(e)}},js_string:{new:(e,t)=>{let o=new Uint8Array(a.buffer,e,t);return new TextDecoder("utf8").decode(o)},log:e=>{let t=new TextEncoder().encode(e);for(let o of t)self.postMessage(o)},...n?.js_string},...(delete n?.js_string,n)},{instance:i}=await WebAssembly.instantiate(r,m);a=i.exports["moonbit.memory"];let c=i.exports._start;c(),self.postMessage(l)}catch(r){r instanceof WebAssembly.CompileError?self.postMessage(p(`${r.message}`)):r instanceof Error&&self.postMessage(b(`${r.message}`))}};
